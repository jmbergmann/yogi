// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yogi_00debc62.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "yogi_00debc62.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace yogi_00debc62_ns {

void protobuf_ShutdownFile_yogi_5f00debc62_2eproto() {
  delete ScatterMessage::default_instance_;
  delete ScatterMessage_Pair::default_instance_;
  delete GatherMessage::default_instance_;
  delete GatherMessage_Pair::default_instance_;
  delete PublishMessage::default_instance_;
  delete PublishMessage_Pair::default_instance_;
  delete MasterMessage::default_instance_;
  delete MasterMessage_Pair::default_instance_;
  delete SlaveMessage::default_instance_;
  delete SlaveMessage_Pair::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_yogi_5f00debc62_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_yogi_5f00debc62_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_yogi_5f00debc62_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ScatterMessage::default_instance_ = new ScatterMessage();
  ScatterMessage_Pair::default_instance_ = new ScatterMessage_Pair();
  GatherMessage::default_instance_ = new GatherMessage();
  GatherMessage_Pair::default_instance_ = new GatherMessage_Pair();
  PublishMessage::default_instance_ = new PublishMessage();
  PublishMessage_Pair::default_instance_ = new PublishMessage_Pair();
  MasterMessage::default_instance_ = new MasterMessage();
  MasterMessage_Pair::default_instance_ = new MasterMessage_Pair();
  SlaveMessage::default_instance_ = new SlaveMessage();
  SlaveMessage_Pair::default_instance_ = new SlaveMessage_Pair();
  ScatterMessage::default_instance_->InitAsDefaultInstance();
  ScatterMessage_Pair::default_instance_->InitAsDefaultInstance();
  GatherMessage::default_instance_->InitAsDefaultInstance();
  GatherMessage_Pair::default_instance_->InitAsDefaultInstance();
  PublishMessage::default_instance_->InitAsDefaultInstance();
  PublishMessage_Pair::default_instance_->InitAsDefaultInstance();
  MasterMessage::default_instance_->InitAsDefaultInstance();
  MasterMessage_Pair::default_instance_->InitAsDefaultInstance();
  SlaveMessage::default_instance_->InitAsDefaultInstance();
  SlaveMessage_Pair::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_yogi_5f00debc62_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_yogi_5f00debc62_2eproto_once_);
void protobuf_AddDesc_yogi_5f00debc62_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_yogi_5f00debc62_2eproto_once_,
                 &protobuf_AddDesc_yogi_5f00debc62_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_yogi_5f00debc62_2eproto {
  StaticDescriptorInitializer_yogi_5f00debc62_2eproto() {
    protobuf_AddDesc_yogi_5f00debc62_2eproto();
  }
} static_descriptor_initializer_yogi_5f00debc62_2eproto_;
#endif
bool Tribool_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScatterMessage_Pair::kFirstFieldNumber;
const int ScatterMessage_Pair::kSecondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScatterMessage_Pair::ScatterMessage_Pair()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yogi_00debc62_ns.ScatterMessage.Pair)
}

void ScatterMessage_Pair::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ScatterMessage_Pair::ScatterMessage_Pair(const ScatterMessage_Pair& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:yogi_00debc62_ns.ScatterMessage.Pair)
}

void ScatterMessage_Pair::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  first_ = 0;
  second_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ScatterMessage_Pair::~ScatterMessage_Pair() {
  // @@protoc_insertion_point(destructor:yogi_00debc62_ns.ScatterMessage.Pair)
  SharedDtor();
}

void ScatterMessage_Pair::SharedDtor() {
  second_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void ScatterMessage_Pair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ScatterMessage_Pair& ScatterMessage_Pair::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_yogi_5f00debc62_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_yogi_5f00debc62_2eproto();
#endif
  return *default_instance_;
}

ScatterMessage_Pair* ScatterMessage_Pair::default_instance_ = NULL;

ScatterMessage_Pair* ScatterMessage_Pair::New(::google::protobuf::Arena* arena) const {
  ScatterMessage_Pair* n = new ScatterMessage_Pair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScatterMessage_Pair::Clear() {
// @@protoc_insertion_point(message_clear_start:yogi_00debc62_ns.ScatterMessage.Pair)
  first_ = 0;
  second_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ScatterMessage_Pair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:yogi_00debc62_ns.ScatterMessage.Pair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float first = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &first_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_second;
        break;
      }

      // optional bytes second = 2;
      case 2: {
        if (tag == 18) {
         parse_second:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_second()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yogi_00debc62_ns.ScatterMessage.Pair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yogi_00debc62_ns.ScatterMessage.Pair)
  return false;
#undef DO_
}

void ScatterMessage_Pair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yogi_00debc62_ns.ScatterMessage.Pair)
  // optional float first = 1;
  if (this->first() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->first(), output);
  }

  // optional bytes second = 2;
  if (this->second().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->second(), output);
  }

  // @@protoc_insertion_point(serialize_end:yogi_00debc62_ns.ScatterMessage.Pair)
}

int ScatterMessage_Pair::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:yogi_00debc62_ns.ScatterMessage.Pair)
  int total_size = 0;

  // optional float first = 1;
  if (this->first() != 0) {
    total_size += 1 + 4;
  }

  // optional bytes second = 2;
  if (this->second().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->second());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScatterMessage_Pair::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ScatterMessage_Pair*>(&from));
}

void ScatterMessage_Pair::MergeFrom(const ScatterMessage_Pair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yogi_00debc62_ns.ScatterMessage.Pair)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.first() != 0) {
    set_first(from.first());
  }
  if (from.second().size() > 0) {

    second_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.second_);
  }
}

void ScatterMessage_Pair::CopyFrom(const ScatterMessage_Pair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yogi_00debc62_ns.ScatterMessage.Pair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScatterMessage_Pair::IsInitialized() const {

  return true;
}

void ScatterMessage_Pair::Swap(ScatterMessage_Pair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScatterMessage_Pair::InternalSwap(ScatterMessage_Pair* other) {
  std::swap(first_, other->first_);
  second_.Swap(&other->second_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ScatterMessage_Pair::GetTypeName() const {
  return "yogi_00debc62.ScatterMessage.Pair";
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScatterMessage::kTimestampFieldNumber;
const int ScatterMessage::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScatterMessage::ScatterMessage()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yogi_00debc62_ns.ScatterMessage)
}

void ScatterMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ScatterMessage::ScatterMessage(const ScatterMessage& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:yogi_00debc62_ns.ScatterMessage)
}

void ScatterMessage::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  timestamp_ = GOOGLE_ULONGLONG(0);
}

ScatterMessage::~ScatterMessage() {
  // @@protoc_insertion_point(destructor:yogi_00debc62_ns.ScatterMessage)
  SharedDtor();
}

void ScatterMessage::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void ScatterMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ScatterMessage& ScatterMessage::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_yogi_5f00debc62_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_yogi_5f00debc62_2eproto();
#endif
  return *default_instance_;
}

ScatterMessage* ScatterMessage::default_instance_ = NULL;

ScatterMessage* ScatterMessage::New(::google::protobuf::Arena* arena) const {
  ScatterMessage* n = new ScatterMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScatterMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:yogi_00debc62_ns.ScatterMessage)
  timestamp_ = GOOGLE_ULONGLONG(0);
  value_.Clear();
}

bool ScatterMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:yogi_00debc62_ns.ScatterMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 timestamp = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // repeated .yogi_00debc62.ScatterMessage.Pair value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(input->IncrementRecursionDepth());
         parse_loop_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_value;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yogi_00debc62_ns.ScatterMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yogi_00debc62_ns.ScatterMessage)
  return false;
#undef DO_
}

void ScatterMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yogi_00debc62_ns.ScatterMessage)
  // optional uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->timestamp(), output);
  }

  // repeated .yogi_00debc62.ScatterMessage.Pair value = 2;
  for (unsigned int i = 0, n = this->value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->value(i), output);
  }

  // @@protoc_insertion_point(serialize_end:yogi_00debc62_ns.ScatterMessage)
}

int ScatterMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:yogi_00debc62_ns.ScatterMessage)
  int total_size = 0;

  // optional uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  // repeated .yogi_00debc62.ScatterMessage.Pair value = 2;
  total_size += 1 * this->value_size();
  for (int i = 0; i < this->value_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->value(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScatterMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ScatterMessage*>(&from));
}

void ScatterMessage::MergeFrom(const ScatterMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yogi_00debc62_ns.ScatterMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  value_.MergeFrom(from.value_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void ScatterMessage::CopyFrom(const ScatterMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yogi_00debc62_ns.ScatterMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScatterMessage::IsInitialized() const {

  return true;
}

void ScatterMessage::Swap(ScatterMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScatterMessage::InternalSwap(ScatterMessage* other) {
  std::swap(timestamp_, other->timestamp_);
  value_.UnsafeArenaSwap(&other->value_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ScatterMessage::GetTypeName() const {
  return "yogi_00debc62.ScatterMessage";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ScatterMessage_Pair

// optional float first = 1;
void ScatterMessage_Pair::clear_first() {
  first_ = 0;
}
 float ScatterMessage_Pair::first() const {
  // @@protoc_insertion_point(field_get:yogi_00debc62_ns.ScatterMessage.Pair.first)
  return first_;
}
 void ScatterMessage_Pair::set_first(float value) {
  
  first_ = value;
  // @@protoc_insertion_point(field_set:yogi_00debc62_ns.ScatterMessage.Pair.first)
}

// optional bytes second = 2;
void ScatterMessage_Pair::clear_second() {
  second_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ScatterMessage_Pair::second() const {
  // @@protoc_insertion_point(field_get:yogi_00debc62_ns.ScatterMessage.Pair.second)
  return second_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ScatterMessage_Pair::set_second(const ::std::string& value) {
  
  second_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yogi_00debc62_ns.ScatterMessage.Pair.second)
}
 void ScatterMessage_Pair::set_second(const char* value) {
  
  second_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yogi_00debc62_ns.ScatterMessage.Pair.second)
}
 void ScatterMessage_Pair::set_second(const void* value, size_t size) {
  
  second_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yogi_00debc62_ns.ScatterMessage.Pair.second)
}
 ::std::string* ScatterMessage_Pair::mutable_second() {
  
  // @@protoc_insertion_point(field_mutable:yogi_00debc62_ns.ScatterMessage.Pair.second)
  return second_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ScatterMessage_Pair::release_second() {
  // @@protoc_insertion_point(field_release:yogi_00debc62_ns.ScatterMessage.Pair.second)
  
  return second_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ScatterMessage_Pair::set_allocated_second(::std::string* second) {
  if (second != NULL) {
    
  } else {
    
  }
  second_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), second);
  // @@protoc_insertion_point(field_set_allocated:yogi_00debc62_ns.ScatterMessage.Pair.second)
}

// -------------------------------------------------------------------

// ScatterMessage

// optional uint64 timestamp = 1;
void ScatterMessage::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 ScatterMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:yogi_00debc62_ns.ScatterMessage.timestamp)
  return timestamp_;
}
 void ScatterMessage::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:yogi_00debc62_ns.ScatterMessage.timestamp)
}

// repeated .yogi_00debc62.ScatterMessage.Pair value = 2;
int ScatterMessage::value_size() const {
  return value_.size();
}
void ScatterMessage::clear_value() {
  value_.Clear();
}
const ::yogi_00debc62_ns::ScatterMessage_Pair& ScatterMessage::value(int index) const {
  // @@protoc_insertion_point(field_get:yogi_00debc62_ns.ScatterMessage.value)
  return value_.Get(index);
}
::yogi_00debc62_ns::ScatterMessage_Pair* ScatterMessage::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:yogi_00debc62_ns.ScatterMessage.value)
  return value_.Mutable(index);
}
::yogi_00debc62_ns::ScatterMessage_Pair* ScatterMessage::add_value() {
  // @@protoc_insertion_point(field_add:yogi_00debc62_ns.ScatterMessage.value)
  return value_.Add();
}
::google::protobuf::RepeatedPtrField< ::yogi_00debc62_ns::ScatterMessage_Pair >*
ScatterMessage::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:yogi_00debc62_ns.ScatterMessage.value)
  return &value_;
}
const ::google::protobuf::RepeatedPtrField< ::yogi_00debc62_ns::ScatterMessage_Pair >&
ScatterMessage::value() const {
  // @@protoc_insertion_point(field_list:yogi_00debc62_ns.ScatterMessage.value)
  return value_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GatherMessage_Pair::kFirstFieldNumber;
const int GatherMessage_Pair::kSecondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GatherMessage_Pair::GatherMessage_Pair()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yogi_00debc62_ns.GatherMessage.Pair)
}

void GatherMessage_Pair::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GatherMessage_Pair::GatherMessage_Pair(const GatherMessage_Pair& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:yogi_00debc62_ns.GatherMessage.Pair)
}

void GatherMessage_Pair::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  first_ = 0;
  second_ = 0;
}

GatherMessage_Pair::~GatherMessage_Pair() {
  // @@protoc_insertion_point(destructor:yogi_00debc62_ns.GatherMessage.Pair)
  SharedDtor();
}

void GatherMessage_Pair::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void GatherMessage_Pair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const GatherMessage_Pair& GatherMessage_Pair::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_yogi_5f00debc62_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_yogi_5f00debc62_2eproto();
#endif
  return *default_instance_;
}

GatherMessage_Pair* GatherMessage_Pair::default_instance_ = NULL;

GatherMessage_Pair* GatherMessage_Pair::New(::google::protobuf::Arena* arena) const {
  GatherMessage_Pair* n = new GatherMessage_Pair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GatherMessage_Pair::Clear() {
// @@protoc_insertion_point(message_clear_start:yogi_00debc62_ns.GatherMessage.Pair)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GatherMessage_Pair, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GatherMessage_Pair*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(first_, second_);

#undef ZR_HELPER_
#undef ZR_

}

bool GatherMessage_Pair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:yogi_00debc62_ns.GatherMessage.Pair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .yogi_00debc62.Tribool first = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_first(static_cast< ::yogi_00debc62_ns::Tribool >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_second;
        break;
      }

      // optional sint32 second = 2;
      case 2: {
        if (tag == 16) {
         parse_second:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &second_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yogi_00debc62_ns.GatherMessage.Pair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yogi_00debc62_ns.GatherMessage.Pair)
  return false;
#undef DO_
}

void GatherMessage_Pair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yogi_00debc62_ns.GatherMessage.Pair)
  // optional .yogi_00debc62.Tribool first = 1;
  if (this->first() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->first(), output);
  }

  // optional sint32 second = 2;
  if (this->second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->second(), output);
  }

  // @@protoc_insertion_point(serialize_end:yogi_00debc62_ns.GatherMessage.Pair)
}

int GatherMessage_Pair::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:yogi_00debc62_ns.GatherMessage.Pair)
  int total_size = 0;

  // optional .yogi_00debc62.Tribool first = 1;
  if (this->first() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->first());
  }

  // optional sint32 second = 2;
  if (this->second() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->second());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GatherMessage_Pair::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GatherMessage_Pair*>(&from));
}

void GatherMessage_Pair::MergeFrom(const GatherMessage_Pair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yogi_00debc62_ns.GatherMessage.Pair)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.first() != 0) {
    set_first(from.first());
  }
  if (from.second() != 0) {
    set_second(from.second());
  }
}

void GatherMessage_Pair::CopyFrom(const GatherMessage_Pair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yogi_00debc62_ns.GatherMessage.Pair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GatherMessage_Pair::IsInitialized() const {

  return true;
}

void GatherMessage_Pair::Swap(GatherMessage_Pair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GatherMessage_Pair::InternalSwap(GatherMessage_Pair* other) {
  std::swap(first_, other->first_);
  std::swap(second_, other->second_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string GatherMessage_Pair::GetTypeName() const {
  return "yogi_00debc62.GatherMessage.Pair";
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GatherMessage::kTimestampFieldNumber;
const int GatherMessage::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GatherMessage::GatherMessage()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yogi_00debc62_ns.GatherMessage)
}

void GatherMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GatherMessage::GatherMessage(const GatherMessage& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:yogi_00debc62_ns.GatherMessage)
}

void GatherMessage::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  timestamp_ = GOOGLE_ULONGLONG(0);
}

GatherMessage::~GatherMessage() {
  // @@protoc_insertion_point(destructor:yogi_00debc62_ns.GatherMessage)
  SharedDtor();
}

void GatherMessage::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void GatherMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const GatherMessage& GatherMessage::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_yogi_5f00debc62_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_yogi_5f00debc62_2eproto();
#endif
  return *default_instance_;
}

GatherMessage* GatherMessage::default_instance_ = NULL;

GatherMessage* GatherMessage::New(::google::protobuf::Arena* arena) const {
  GatherMessage* n = new GatherMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GatherMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:yogi_00debc62_ns.GatherMessage)
  timestamp_ = GOOGLE_ULONGLONG(0);
  value_.Clear();
}

bool GatherMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:yogi_00debc62_ns.GatherMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 timestamp = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // repeated .yogi_00debc62.GatherMessage.Pair value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(input->IncrementRecursionDepth());
         parse_loop_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_value;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yogi_00debc62_ns.GatherMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yogi_00debc62_ns.GatherMessage)
  return false;
#undef DO_
}

void GatherMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yogi_00debc62_ns.GatherMessage)
  // optional uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->timestamp(), output);
  }

  // repeated .yogi_00debc62.GatherMessage.Pair value = 2;
  for (unsigned int i = 0, n = this->value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->value(i), output);
  }

  // @@protoc_insertion_point(serialize_end:yogi_00debc62_ns.GatherMessage)
}

int GatherMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:yogi_00debc62_ns.GatherMessage)
  int total_size = 0;

  // optional uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  // repeated .yogi_00debc62.GatherMessage.Pair value = 2;
  total_size += 1 * this->value_size();
  for (int i = 0; i < this->value_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->value(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GatherMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GatherMessage*>(&from));
}

void GatherMessage::MergeFrom(const GatherMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yogi_00debc62_ns.GatherMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  value_.MergeFrom(from.value_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void GatherMessage::CopyFrom(const GatherMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yogi_00debc62_ns.GatherMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GatherMessage::IsInitialized() const {

  return true;
}

void GatherMessage::Swap(GatherMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GatherMessage::InternalSwap(GatherMessage* other) {
  std::swap(timestamp_, other->timestamp_);
  value_.UnsafeArenaSwap(&other->value_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string GatherMessage::GetTypeName() const {
  return "yogi_00debc62.GatherMessage";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GatherMessage_Pair

// optional .yogi_00debc62.Tribool first = 1;
void GatherMessage_Pair::clear_first() {
  first_ = 0;
}
 ::yogi_00debc62_ns::Tribool GatherMessage_Pair::first() const {
  // @@protoc_insertion_point(field_get:yogi_00debc62_ns.GatherMessage.Pair.first)
  return static_cast< ::yogi_00debc62_ns::Tribool >(first_);
}
 void GatherMessage_Pair::set_first(::yogi_00debc62_ns::Tribool value) {
  
  first_ = value;
  // @@protoc_insertion_point(field_set:yogi_00debc62_ns.GatherMessage.Pair.first)
}

// optional sint32 second = 2;
void GatherMessage_Pair::clear_second() {
  second_ = 0;
}
 ::google::protobuf::int32 GatherMessage_Pair::second() const {
  // @@protoc_insertion_point(field_get:yogi_00debc62_ns.GatherMessage.Pair.second)
  return second_;
}
 void GatherMessage_Pair::set_second(::google::protobuf::int32 value) {
  
  second_ = value;
  // @@protoc_insertion_point(field_set:yogi_00debc62_ns.GatherMessage.Pair.second)
}

// -------------------------------------------------------------------

// GatherMessage

// optional uint64 timestamp = 1;
void GatherMessage::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 GatherMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:yogi_00debc62_ns.GatherMessage.timestamp)
  return timestamp_;
}
 void GatherMessage::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:yogi_00debc62_ns.GatherMessage.timestamp)
}

// repeated .yogi_00debc62.GatherMessage.Pair value = 2;
int GatherMessage::value_size() const {
  return value_.size();
}
void GatherMessage::clear_value() {
  value_.Clear();
}
const ::yogi_00debc62_ns::GatherMessage_Pair& GatherMessage::value(int index) const {
  // @@protoc_insertion_point(field_get:yogi_00debc62_ns.GatherMessage.value)
  return value_.Get(index);
}
::yogi_00debc62_ns::GatherMessage_Pair* GatherMessage::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:yogi_00debc62_ns.GatherMessage.value)
  return value_.Mutable(index);
}
::yogi_00debc62_ns::GatherMessage_Pair* GatherMessage::add_value() {
  // @@protoc_insertion_point(field_add:yogi_00debc62_ns.GatherMessage.value)
  return value_.Add();
}
::google::protobuf::RepeatedPtrField< ::yogi_00debc62_ns::GatherMessage_Pair >*
GatherMessage::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:yogi_00debc62_ns.GatherMessage.value)
  return &value_;
}
const ::google::protobuf::RepeatedPtrField< ::yogi_00debc62_ns::GatherMessage_Pair >&
GatherMessage::value() const {
  // @@protoc_insertion_point(field_list:yogi_00debc62_ns.GatherMessage.value)
  return value_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PublishMessage_Pair::kFirstFieldNumber;
const int PublishMessage_Pair::kSecondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PublishMessage_Pair::PublishMessage_Pair()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yogi_00debc62_ns.PublishMessage.Pair)
}

void PublishMessage_Pair::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PublishMessage_Pair::PublishMessage_Pair(const PublishMessage_Pair& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:yogi_00debc62_ns.PublishMessage.Pair)
}

void PublishMessage_Pair::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  first_ = 0;
  second_ = 0;
}

PublishMessage_Pair::~PublishMessage_Pair() {
  // @@protoc_insertion_point(destructor:yogi_00debc62_ns.PublishMessage.Pair)
  SharedDtor();
}

void PublishMessage_Pair::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void PublishMessage_Pair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const PublishMessage_Pair& PublishMessage_Pair::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_yogi_5f00debc62_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_yogi_5f00debc62_2eproto();
#endif
  return *default_instance_;
}

PublishMessage_Pair* PublishMessage_Pair::default_instance_ = NULL;

PublishMessage_Pair* PublishMessage_Pair::New(::google::protobuf::Arena* arena) const {
  PublishMessage_Pair* n = new PublishMessage_Pair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PublishMessage_Pair::Clear() {
// @@protoc_insertion_point(message_clear_start:yogi_00debc62_ns.PublishMessage.Pair)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PublishMessage_Pair, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PublishMessage_Pair*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(first_, second_);

#undef ZR_HELPER_
#undef ZR_

}

bool PublishMessage_Pair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:yogi_00debc62_ns.PublishMessage.Pair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .yogi_00debc62.Tribool first = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_first(static_cast< ::yogi_00debc62_ns::Tribool >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_second;
        break;
      }

      // optional sint32 second = 2;
      case 2: {
        if (tag == 16) {
         parse_second:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &second_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yogi_00debc62_ns.PublishMessage.Pair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yogi_00debc62_ns.PublishMessage.Pair)
  return false;
#undef DO_
}

void PublishMessage_Pair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yogi_00debc62_ns.PublishMessage.Pair)
  // optional .yogi_00debc62.Tribool first = 1;
  if (this->first() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->first(), output);
  }

  // optional sint32 second = 2;
  if (this->second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->second(), output);
  }

  // @@protoc_insertion_point(serialize_end:yogi_00debc62_ns.PublishMessage.Pair)
}

int PublishMessage_Pair::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:yogi_00debc62_ns.PublishMessage.Pair)
  int total_size = 0;

  // optional .yogi_00debc62.Tribool first = 1;
  if (this->first() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->first());
  }

  // optional sint32 second = 2;
  if (this->second() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->second());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PublishMessage_Pair::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PublishMessage_Pair*>(&from));
}

void PublishMessage_Pair::MergeFrom(const PublishMessage_Pair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yogi_00debc62_ns.PublishMessage.Pair)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.first() != 0) {
    set_first(from.first());
  }
  if (from.second() != 0) {
    set_second(from.second());
  }
}

void PublishMessage_Pair::CopyFrom(const PublishMessage_Pair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yogi_00debc62_ns.PublishMessage.Pair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublishMessage_Pair::IsInitialized() const {

  return true;
}

void PublishMessage_Pair::Swap(PublishMessage_Pair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PublishMessage_Pair::InternalSwap(PublishMessage_Pair* other) {
  std::swap(first_, other->first_);
  std::swap(second_, other->second_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string PublishMessage_Pair::GetTypeName() const {
  return "yogi_00debc62.PublishMessage.Pair";
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PublishMessage::kTimestampFieldNumber;
const int PublishMessage::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PublishMessage::PublishMessage()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yogi_00debc62_ns.PublishMessage)
}

void PublishMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PublishMessage::PublishMessage(const PublishMessage& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:yogi_00debc62_ns.PublishMessage)
}

void PublishMessage::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  timestamp_ = GOOGLE_ULONGLONG(0);
}

PublishMessage::~PublishMessage() {
  // @@protoc_insertion_point(destructor:yogi_00debc62_ns.PublishMessage)
  SharedDtor();
}

void PublishMessage::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void PublishMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const PublishMessage& PublishMessage::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_yogi_5f00debc62_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_yogi_5f00debc62_2eproto();
#endif
  return *default_instance_;
}

PublishMessage* PublishMessage::default_instance_ = NULL;

PublishMessage* PublishMessage::New(::google::protobuf::Arena* arena) const {
  PublishMessage* n = new PublishMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PublishMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:yogi_00debc62_ns.PublishMessage)
  timestamp_ = GOOGLE_ULONGLONG(0);
  value_.Clear();
}

bool PublishMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:yogi_00debc62_ns.PublishMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 timestamp = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // repeated .yogi_00debc62.PublishMessage.Pair value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(input->IncrementRecursionDepth());
         parse_loop_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_value;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yogi_00debc62_ns.PublishMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yogi_00debc62_ns.PublishMessage)
  return false;
#undef DO_
}

void PublishMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yogi_00debc62_ns.PublishMessage)
  // optional uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->timestamp(), output);
  }

  // repeated .yogi_00debc62.PublishMessage.Pair value = 2;
  for (unsigned int i = 0, n = this->value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->value(i), output);
  }

  // @@protoc_insertion_point(serialize_end:yogi_00debc62_ns.PublishMessage)
}

int PublishMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:yogi_00debc62_ns.PublishMessage)
  int total_size = 0;

  // optional uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  // repeated .yogi_00debc62.PublishMessage.Pair value = 2;
  total_size += 1 * this->value_size();
  for (int i = 0; i < this->value_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->value(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PublishMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PublishMessage*>(&from));
}

void PublishMessage::MergeFrom(const PublishMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yogi_00debc62_ns.PublishMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  value_.MergeFrom(from.value_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void PublishMessage::CopyFrom(const PublishMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yogi_00debc62_ns.PublishMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublishMessage::IsInitialized() const {

  return true;
}

void PublishMessage::Swap(PublishMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PublishMessage::InternalSwap(PublishMessage* other) {
  std::swap(timestamp_, other->timestamp_);
  value_.UnsafeArenaSwap(&other->value_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string PublishMessage::GetTypeName() const {
  return "yogi_00debc62.PublishMessage";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PublishMessage_Pair

// optional .yogi_00debc62.Tribool first = 1;
void PublishMessage_Pair::clear_first() {
  first_ = 0;
}
 ::yogi_00debc62_ns::Tribool PublishMessage_Pair::first() const {
  // @@protoc_insertion_point(field_get:yogi_00debc62_ns.PublishMessage.Pair.first)
  return static_cast< ::yogi_00debc62_ns::Tribool >(first_);
}
 void PublishMessage_Pair::set_first(::yogi_00debc62_ns::Tribool value) {
  
  first_ = value;
  // @@protoc_insertion_point(field_set:yogi_00debc62_ns.PublishMessage.Pair.first)
}

// optional sint32 second = 2;
void PublishMessage_Pair::clear_second() {
  second_ = 0;
}
 ::google::protobuf::int32 PublishMessage_Pair::second() const {
  // @@protoc_insertion_point(field_get:yogi_00debc62_ns.PublishMessage.Pair.second)
  return second_;
}
 void PublishMessage_Pair::set_second(::google::protobuf::int32 value) {
  
  second_ = value;
  // @@protoc_insertion_point(field_set:yogi_00debc62_ns.PublishMessage.Pair.second)
}

// -------------------------------------------------------------------

// PublishMessage

// optional uint64 timestamp = 1;
void PublishMessage::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 PublishMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:yogi_00debc62_ns.PublishMessage.timestamp)
  return timestamp_;
}
 void PublishMessage::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:yogi_00debc62_ns.PublishMessage.timestamp)
}

// repeated .yogi_00debc62.PublishMessage.Pair value = 2;
int PublishMessage::value_size() const {
  return value_.size();
}
void PublishMessage::clear_value() {
  value_.Clear();
}
const ::yogi_00debc62_ns::PublishMessage_Pair& PublishMessage::value(int index) const {
  // @@protoc_insertion_point(field_get:yogi_00debc62_ns.PublishMessage.value)
  return value_.Get(index);
}
::yogi_00debc62_ns::PublishMessage_Pair* PublishMessage::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:yogi_00debc62_ns.PublishMessage.value)
  return value_.Mutable(index);
}
::yogi_00debc62_ns::PublishMessage_Pair* PublishMessage::add_value() {
  // @@protoc_insertion_point(field_add:yogi_00debc62_ns.PublishMessage.value)
  return value_.Add();
}
::google::protobuf::RepeatedPtrField< ::yogi_00debc62_ns::PublishMessage_Pair >*
PublishMessage::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:yogi_00debc62_ns.PublishMessage.value)
  return &value_;
}
const ::google::protobuf::RepeatedPtrField< ::yogi_00debc62_ns::PublishMessage_Pair >&
PublishMessage::value() const {
  // @@protoc_insertion_point(field_list:yogi_00debc62_ns.PublishMessage.value)
  return value_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MasterMessage_Pair::kFirstFieldNumber;
const int MasterMessage_Pair::kSecondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MasterMessage_Pair::MasterMessage_Pair()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yogi_00debc62_ns.MasterMessage.Pair)
}

void MasterMessage_Pair::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MasterMessage_Pair::MasterMessage_Pair(const MasterMessage_Pair& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:yogi_00debc62_ns.MasterMessage.Pair)
}

void MasterMessage_Pair::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  first_ = 0;
  second_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MasterMessage_Pair::~MasterMessage_Pair() {
  // @@protoc_insertion_point(destructor:yogi_00debc62_ns.MasterMessage.Pair)
  SharedDtor();
}

void MasterMessage_Pair::SharedDtor() {
  second_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MasterMessage_Pair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MasterMessage_Pair& MasterMessage_Pair::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_yogi_5f00debc62_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_yogi_5f00debc62_2eproto();
#endif
  return *default_instance_;
}

MasterMessage_Pair* MasterMessage_Pair::default_instance_ = NULL;

MasterMessage_Pair* MasterMessage_Pair::New(::google::protobuf::Arena* arena) const {
  MasterMessage_Pair* n = new MasterMessage_Pair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MasterMessage_Pair::Clear() {
// @@protoc_insertion_point(message_clear_start:yogi_00debc62_ns.MasterMessage.Pair)
  first_ = 0;
  second_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MasterMessage_Pair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:yogi_00debc62_ns.MasterMessage.Pair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float first = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &first_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_second;
        break;
      }

      // optional bytes second = 2;
      case 2: {
        if (tag == 18) {
         parse_second:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_second()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yogi_00debc62_ns.MasterMessage.Pair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yogi_00debc62_ns.MasterMessage.Pair)
  return false;
#undef DO_
}

void MasterMessage_Pair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yogi_00debc62_ns.MasterMessage.Pair)
  // optional float first = 1;
  if (this->first() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->first(), output);
  }

  // optional bytes second = 2;
  if (this->second().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->second(), output);
  }

  // @@protoc_insertion_point(serialize_end:yogi_00debc62_ns.MasterMessage.Pair)
}

int MasterMessage_Pair::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:yogi_00debc62_ns.MasterMessage.Pair)
  int total_size = 0;

  // optional float first = 1;
  if (this->first() != 0) {
    total_size += 1 + 4;
  }

  // optional bytes second = 2;
  if (this->second().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->second());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MasterMessage_Pair::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MasterMessage_Pair*>(&from));
}

void MasterMessage_Pair::MergeFrom(const MasterMessage_Pair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yogi_00debc62_ns.MasterMessage.Pair)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.first() != 0) {
    set_first(from.first());
  }
  if (from.second().size() > 0) {

    second_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.second_);
  }
}

void MasterMessage_Pair::CopyFrom(const MasterMessage_Pair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yogi_00debc62_ns.MasterMessage.Pair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterMessage_Pair::IsInitialized() const {

  return true;
}

void MasterMessage_Pair::Swap(MasterMessage_Pair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MasterMessage_Pair::InternalSwap(MasterMessage_Pair* other) {
  std::swap(first_, other->first_);
  second_.Swap(&other->second_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MasterMessage_Pair::GetTypeName() const {
  return "yogi_00debc62.MasterMessage.Pair";
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MasterMessage::kTimestampFieldNumber;
const int MasterMessage::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MasterMessage::MasterMessage()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yogi_00debc62_ns.MasterMessage)
}

void MasterMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MasterMessage::MasterMessage(const MasterMessage& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:yogi_00debc62_ns.MasterMessage)
}

void MasterMessage::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  timestamp_ = GOOGLE_ULONGLONG(0);
}

MasterMessage::~MasterMessage() {
  // @@protoc_insertion_point(destructor:yogi_00debc62_ns.MasterMessage)
  SharedDtor();
}

void MasterMessage::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MasterMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MasterMessage& MasterMessage::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_yogi_5f00debc62_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_yogi_5f00debc62_2eproto();
#endif
  return *default_instance_;
}

MasterMessage* MasterMessage::default_instance_ = NULL;

MasterMessage* MasterMessage::New(::google::protobuf::Arena* arena) const {
  MasterMessage* n = new MasterMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MasterMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:yogi_00debc62_ns.MasterMessage)
  timestamp_ = GOOGLE_ULONGLONG(0);
  value_.Clear();
}

bool MasterMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:yogi_00debc62_ns.MasterMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 timestamp = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // repeated .yogi_00debc62.MasterMessage.Pair value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(input->IncrementRecursionDepth());
         parse_loop_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_value;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yogi_00debc62_ns.MasterMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yogi_00debc62_ns.MasterMessage)
  return false;
#undef DO_
}

void MasterMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yogi_00debc62_ns.MasterMessage)
  // optional uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->timestamp(), output);
  }

  // repeated .yogi_00debc62.MasterMessage.Pair value = 2;
  for (unsigned int i = 0, n = this->value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->value(i), output);
  }

  // @@protoc_insertion_point(serialize_end:yogi_00debc62_ns.MasterMessage)
}

int MasterMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:yogi_00debc62_ns.MasterMessage)
  int total_size = 0;

  // optional uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  // repeated .yogi_00debc62.MasterMessage.Pair value = 2;
  total_size += 1 * this->value_size();
  for (int i = 0; i < this->value_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->value(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MasterMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MasterMessage*>(&from));
}

void MasterMessage::MergeFrom(const MasterMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yogi_00debc62_ns.MasterMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  value_.MergeFrom(from.value_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void MasterMessage::CopyFrom(const MasterMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yogi_00debc62_ns.MasterMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterMessage::IsInitialized() const {

  return true;
}

void MasterMessage::Swap(MasterMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MasterMessage::InternalSwap(MasterMessage* other) {
  std::swap(timestamp_, other->timestamp_);
  value_.UnsafeArenaSwap(&other->value_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MasterMessage::GetTypeName() const {
  return "yogi_00debc62.MasterMessage";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MasterMessage_Pair

// optional float first = 1;
void MasterMessage_Pair::clear_first() {
  first_ = 0;
}
 float MasterMessage_Pair::first() const {
  // @@protoc_insertion_point(field_get:yogi_00debc62_ns.MasterMessage.Pair.first)
  return first_;
}
 void MasterMessage_Pair::set_first(float value) {
  
  first_ = value;
  // @@protoc_insertion_point(field_set:yogi_00debc62_ns.MasterMessage.Pair.first)
}

// optional bytes second = 2;
void MasterMessage_Pair::clear_second() {
  second_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MasterMessage_Pair::second() const {
  // @@protoc_insertion_point(field_get:yogi_00debc62_ns.MasterMessage.Pair.second)
  return second_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MasterMessage_Pair::set_second(const ::std::string& value) {
  
  second_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yogi_00debc62_ns.MasterMessage.Pair.second)
}
 void MasterMessage_Pair::set_second(const char* value) {
  
  second_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yogi_00debc62_ns.MasterMessage.Pair.second)
}
 void MasterMessage_Pair::set_second(const void* value, size_t size) {
  
  second_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yogi_00debc62_ns.MasterMessage.Pair.second)
}
 ::std::string* MasterMessage_Pair::mutable_second() {
  
  // @@protoc_insertion_point(field_mutable:yogi_00debc62_ns.MasterMessage.Pair.second)
  return second_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MasterMessage_Pair::release_second() {
  // @@protoc_insertion_point(field_release:yogi_00debc62_ns.MasterMessage.Pair.second)
  
  return second_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MasterMessage_Pair::set_allocated_second(::std::string* second) {
  if (second != NULL) {
    
  } else {
    
  }
  second_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), second);
  // @@protoc_insertion_point(field_set_allocated:yogi_00debc62_ns.MasterMessage.Pair.second)
}

// -------------------------------------------------------------------

// MasterMessage

// optional uint64 timestamp = 1;
void MasterMessage::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MasterMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:yogi_00debc62_ns.MasterMessage.timestamp)
  return timestamp_;
}
 void MasterMessage::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:yogi_00debc62_ns.MasterMessage.timestamp)
}

// repeated .yogi_00debc62.MasterMessage.Pair value = 2;
int MasterMessage::value_size() const {
  return value_.size();
}
void MasterMessage::clear_value() {
  value_.Clear();
}
const ::yogi_00debc62_ns::MasterMessage_Pair& MasterMessage::value(int index) const {
  // @@protoc_insertion_point(field_get:yogi_00debc62_ns.MasterMessage.value)
  return value_.Get(index);
}
::yogi_00debc62_ns::MasterMessage_Pair* MasterMessage::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:yogi_00debc62_ns.MasterMessage.value)
  return value_.Mutable(index);
}
::yogi_00debc62_ns::MasterMessage_Pair* MasterMessage::add_value() {
  // @@protoc_insertion_point(field_add:yogi_00debc62_ns.MasterMessage.value)
  return value_.Add();
}
::google::protobuf::RepeatedPtrField< ::yogi_00debc62_ns::MasterMessage_Pair >*
MasterMessage::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:yogi_00debc62_ns.MasterMessage.value)
  return &value_;
}
const ::google::protobuf::RepeatedPtrField< ::yogi_00debc62_ns::MasterMessage_Pair >&
MasterMessage::value() const {
  // @@protoc_insertion_point(field_list:yogi_00debc62_ns.MasterMessage.value)
  return value_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SlaveMessage_Pair::kFirstFieldNumber;
const int SlaveMessage_Pair::kSecondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SlaveMessage_Pair::SlaveMessage_Pair()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yogi_00debc62_ns.SlaveMessage.Pair)
}

void SlaveMessage_Pair::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SlaveMessage_Pair::SlaveMessage_Pair(const SlaveMessage_Pair& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:yogi_00debc62_ns.SlaveMessage.Pair)
}

void SlaveMessage_Pair::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  first_ = 0;
  second_ = 0;
}

SlaveMessage_Pair::~SlaveMessage_Pair() {
  // @@protoc_insertion_point(destructor:yogi_00debc62_ns.SlaveMessage.Pair)
  SharedDtor();
}

void SlaveMessage_Pair::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SlaveMessage_Pair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SlaveMessage_Pair& SlaveMessage_Pair::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_yogi_5f00debc62_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_yogi_5f00debc62_2eproto();
#endif
  return *default_instance_;
}

SlaveMessage_Pair* SlaveMessage_Pair::default_instance_ = NULL;

SlaveMessage_Pair* SlaveMessage_Pair::New(::google::protobuf::Arena* arena) const {
  SlaveMessage_Pair* n = new SlaveMessage_Pair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SlaveMessage_Pair::Clear() {
// @@protoc_insertion_point(message_clear_start:yogi_00debc62_ns.SlaveMessage.Pair)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SlaveMessage_Pair, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SlaveMessage_Pair*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(first_, second_);

#undef ZR_HELPER_
#undef ZR_

}

bool SlaveMessage_Pair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:yogi_00debc62_ns.SlaveMessage.Pair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .yogi_00debc62.Tribool first = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_first(static_cast< ::yogi_00debc62_ns::Tribool >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_second;
        break;
      }

      // optional sint32 second = 2;
      case 2: {
        if (tag == 16) {
         parse_second:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &second_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yogi_00debc62_ns.SlaveMessage.Pair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yogi_00debc62_ns.SlaveMessage.Pair)
  return false;
#undef DO_
}

void SlaveMessage_Pair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yogi_00debc62_ns.SlaveMessage.Pair)
  // optional .yogi_00debc62.Tribool first = 1;
  if (this->first() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->first(), output);
  }

  // optional sint32 second = 2;
  if (this->second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->second(), output);
  }

  // @@protoc_insertion_point(serialize_end:yogi_00debc62_ns.SlaveMessage.Pair)
}

int SlaveMessage_Pair::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:yogi_00debc62_ns.SlaveMessage.Pair)
  int total_size = 0;

  // optional .yogi_00debc62.Tribool first = 1;
  if (this->first() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->first());
  }

  // optional sint32 second = 2;
  if (this->second() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->second());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SlaveMessage_Pair::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SlaveMessage_Pair*>(&from));
}

void SlaveMessage_Pair::MergeFrom(const SlaveMessage_Pair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yogi_00debc62_ns.SlaveMessage.Pair)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.first() != 0) {
    set_first(from.first());
  }
  if (from.second() != 0) {
    set_second(from.second());
  }
}

void SlaveMessage_Pair::CopyFrom(const SlaveMessage_Pair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yogi_00debc62_ns.SlaveMessage.Pair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SlaveMessage_Pair::IsInitialized() const {

  return true;
}

void SlaveMessage_Pair::Swap(SlaveMessage_Pair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SlaveMessage_Pair::InternalSwap(SlaveMessage_Pair* other) {
  std::swap(first_, other->first_);
  std::swap(second_, other->second_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SlaveMessage_Pair::GetTypeName() const {
  return "yogi_00debc62.SlaveMessage.Pair";
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SlaveMessage::kTimestampFieldNumber;
const int SlaveMessage::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SlaveMessage::SlaveMessage()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yogi_00debc62_ns.SlaveMessage)
}

void SlaveMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SlaveMessage::SlaveMessage(const SlaveMessage& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:yogi_00debc62_ns.SlaveMessage)
}

void SlaveMessage::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  timestamp_ = GOOGLE_ULONGLONG(0);
}

SlaveMessage::~SlaveMessage() {
  // @@protoc_insertion_point(destructor:yogi_00debc62_ns.SlaveMessage)
  SharedDtor();
}

void SlaveMessage::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SlaveMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SlaveMessage& SlaveMessage::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_yogi_5f00debc62_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_yogi_5f00debc62_2eproto();
#endif
  return *default_instance_;
}

SlaveMessage* SlaveMessage::default_instance_ = NULL;

SlaveMessage* SlaveMessage::New(::google::protobuf::Arena* arena) const {
  SlaveMessage* n = new SlaveMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SlaveMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:yogi_00debc62_ns.SlaveMessage)
  timestamp_ = GOOGLE_ULONGLONG(0);
  value_.Clear();
}

bool SlaveMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:yogi_00debc62_ns.SlaveMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 timestamp = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // repeated .yogi_00debc62.SlaveMessage.Pair value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(input->IncrementRecursionDepth());
         parse_loop_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_value;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yogi_00debc62_ns.SlaveMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yogi_00debc62_ns.SlaveMessage)
  return false;
#undef DO_
}

void SlaveMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yogi_00debc62_ns.SlaveMessage)
  // optional uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->timestamp(), output);
  }

  // repeated .yogi_00debc62.SlaveMessage.Pair value = 2;
  for (unsigned int i = 0, n = this->value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->value(i), output);
  }

  // @@protoc_insertion_point(serialize_end:yogi_00debc62_ns.SlaveMessage)
}

int SlaveMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:yogi_00debc62_ns.SlaveMessage)
  int total_size = 0;

  // optional uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  // repeated .yogi_00debc62.SlaveMessage.Pair value = 2;
  total_size += 1 * this->value_size();
  for (int i = 0; i < this->value_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->value(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SlaveMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SlaveMessage*>(&from));
}

void SlaveMessage::MergeFrom(const SlaveMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yogi_00debc62_ns.SlaveMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  value_.MergeFrom(from.value_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void SlaveMessage::CopyFrom(const SlaveMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yogi_00debc62_ns.SlaveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SlaveMessage::IsInitialized() const {

  return true;
}

void SlaveMessage::Swap(SlaveMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SlaveMessage::InternalSwap(SlaveMessage* other) {
  std::swap(timestamp_, other->timestamp_);
  value_.UnsafeArenaSwap(&other->value_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SlaveMessage::GetTypeName() const {
  return "yogi_00debc62.SlaveMessage";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SlaveMessage_Pair

// optional .yogi_00debc62.Tribool first = 1;
void SlaveMessage_Pair::clear_first() {
  first_ = 0;
}
 ::yogi_00debc62_ns::Tribool SlaveMessage_Pair::first() const {
  // @@protoc_insertion_point(field_get:yogi_00debc62_ns.SlaveMessage.Pair.first)
  return static_cast< ::yogi_00debc62_ns::Tribool >(first_);
}
 void SlaveMessage_Pair::set_first(::yogi_00debc62_ns::Tribool value) {
  
  first_ = value;
  // @@protoc_insertion_point(field_set:yogi_00debc62_ns.SlaveMessage.Pair.first)
}

// optional sint32 second = 2;
void SlaveMessage_Pair::clear_second() {
  second_ = 0;
}
 ::google::protobuf::int32 SlaveMessage_Pair::second() const {
  // @@protoc_insertion_point(field_get:yogi_00debc62_ns.SlaveMessage.Pair.second)
  return second_;
}
 void SlaveMessage_Pair::set_second(::google::protobuf::int32 value) {
  
  second_ = value;
  // @@protoc_insertion_point(field_set:yogi_00debc62_ns.SlaveMessage.Pair.second)
}

// -------------------------------------------------------------------

// SlaveMessage

// optional uint64 timestamp = 1;
void SlaveMessage::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SlaveMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:yogi_00debc62_ns.SlaveMessage.timestamp)
  return timestamp_;
}
 void SlaveMessage::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:yogi_00debc62_ns.SlaveMessage.timestamp)
}

// repeated .yogi_00debc62.SlaveMessage.Pair value = 2;
int SlaveMessage::value_size() const {
  return value_.size();
}
void SlaveMessage::clear_value() {
  value_.Clear();
}
const ::yogi_00debc62_ns::SlaveMessage_Pair& SlaveMessage::value(int index) const {
  // @@protoc_insertion_point(field_get:yogi_00debc62_ns.SlaveMessage.value)
  return value_.Get(index);
}
::yogi_00debc62_ns::SlaveMessage_Pair* SlaveMessage::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:yogi_00debc62_ns.SlaveMessage.value)
  return value_.Mutable(index);
}
::yogi_00debc62_ns::SlaveMessage_Pair* SlaveMessage::add_value() {
  // @@protoc_insertion_point(field_add:yogi_00debc62_ns.SlaveMessage.value)
  return value_.Add();
}
::google::protobuf::RepeatedPtrField< ::yogi_00debc62_ns::SlaveMessage_Pair >*
SlaveMessage::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:yogi_00debc62_ns.SlaveMessage.value)
  return &value_;
}
const ::google::protobuf::RepeatedPtrField< ::yogi_00debc62_ns::SlaveMessage_Pair >&
SlaveMessage::value() const {
  // @@protoc_insertion_point(field_list:yogi_00debc62_ns.SlaveMessage.value)
  return value_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace yogi_00debc62_ns

// @@protoc_insertion_point(global_scope)
